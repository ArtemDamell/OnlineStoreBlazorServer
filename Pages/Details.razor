@page "/details/{ProductId:int}"
@inject ProductService _db

@inject ProtectedLocalStorage cartStorage

@if (currentProduct is null)
{
    <div class="row">
        <div class="col text-center">
            <img src="https://cdn.dribbble.com/users/108183/screenshots/5331825/loading_xxi.gif" height="200" />
        </div>
    </div>
}
else
{
    <DetailsComponent OnAddToCart="AddToCart" Appointment="appointmentObj" OnCurrentProduct="currentProduct" />
}



@code {
    [Parameter] public int ProductId { get; set; }

    public Appointment appointmentObj { get; set; }

    Product currentProduct;

    List<int> listOfShoppingCart = new();

    protected override async Task OnInitializedAsync()
    {
        appointmentObj = new()
        {
            AppointmentDate = DateTime.Now
        };

        currentProduct = await _db.GetSingleProductAsync(ProductId);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            listOfShoppingCart = await cartStorage.GetFromSession<List<int>>(StaticData.SessionKey);
    }

    async Task AddToCart()
    {
        listOfShoppingCart = await cartStorage.GetFromSession<List<int>>(StaticData.SessionKey);

        if (listOfShoppingCart is null)
            listOfShoppingCart = new();

        listOfShoppingCart.Add(ProductId);

        await cartStorage.SetForSession(StaticData.SessionKey, listOfShoppingCart);

        StateHasChanged();
    }
}
